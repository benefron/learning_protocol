# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: contracts.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x63ontracts.proto\"\x18\n\x04\x46ile\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\"\x18\n\x06\x43hipID\x12\x0e\n\x06\x63hipid\x18\x01 \x01(\t\"\x17\n\x06Status\x12\r\n\x05value\x18\x01 \x01(\x08\"\x1c\n\x0bStringReply\x12\r\n\x05value\x18\x01 \x01(\t\"\x13\n\x02Id\x12\r\n\x05value\x18\x01 \x01(\x05\"\x0e\n\x0c\x45mptyMessage\" \n\x10\x43onfigurationNew\x12\x0c\n\x04name\x18\x01 \x01(\t\".\n\x12\x43onfigurationClose\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04save\x18\x02 \x01(\x08\"C\n\tMuxMapNew\x12\x0c\n\x04name\x18\x01 \x01(\t\x12(\n\x0c\x65lectrodePos\x18\x02 \x01(\x0e\x32\x12.ElectrodePosition\"2\n\x06MuxMap\x12(\n\x0c\x65lectrodePos\x18\x01 \x01(\x0e\x32\x12.ElectrodePosition\"F\n\nMuxMapWell\x12\x0e\n\x06wellNr\x18\x01 \x01(\x05\x12(\n\x0c\x65lectrodePos\x18\x02 \x01(\x0e\x32\x12.ElectrodePosition\"H\n\x0bMuxMapPixel\x12\x0f\n\x07pixelNr\x18\x01 \x01(\x05\x12(\n\x0c\x65lectrodePos\x18\x02 \x01(\x0e\x32\x12.ElectrodePosition\"\xa6\x01\n\x12VStimConfiguration\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x17\n\x0fPulse1VoltagemV\x18\x02 \x01(\x02\x12\x17\n\x0fPulse2VoltagemV\x18\x03 \x01(\x02\x12\x18\n\x10Pulse1DurationmS\x18\x04 \x01(\x02\x12\x18\n\x10Pulse2DurationmS\x18\x05 \x01(\x02\x12\x1c\n\x14PulseTotalDurationmS\x18\x06 \x01(\x02\"\xce\x01\n\x12IStimConfiguration\x12\x0c\n\x04name\x18\x01 \x01(\t\x12&\n\x10\x43urrentStepValue\x18\x02 \x01(\x0e\x32\x0c.IStepValues\x12\x17\n\x0fPulse1CurrentpA\x18\x03 \x01(\x02\x12\x17\n\x0fPulse2CurrentpA\x18\x04 \x01(\x02\x12\x18\n\x10Pulse1DurationmS\x18\x05 \x01(\x02\x12\x18\n\x10Pulse2DurationmS\x18\x06 \x01(\x02\x12\x1c\n\x14PulseTotalDurationmS\x18\x07 \x01(\x02\"U\n\x10RecConfiguration\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1b\n\x13\x45nableLowPassFilter\x18\x02 \x01(\x08\x12\x16\n\x04Gain\x18\x03 \x01(\x0e\x32\x08.RecGain\"~\n\x18ImpSpecFreqConfiguration\x12\x1f\n\tFrequency\x18\x01 \x01(\x0e\x32\x0c.ImpSpecFreq\x12&\n\x10\x43urrentStepValue\x18\x02 \x01(\x0e\x32\x0c.IStepValues\x12\x19\n\x11\x43urrentMultiplier\x18\x03 \x01(\x05\"d\n\x14ImpSpecConfiguration\x12\x0c\n\x04name\x18\x01 \x01(\t\x12>\n\x1blstImpSpecFreqConfiguration\x18\x02 \x03(\x0b\x32\x19.ImpSpecFreqConfiguration\"D\n\rWellRefSetNew\x12\x0c\n\x04name\x18\x01 \x01(\t\x12%\n\treference\x18\x02 \x01(\x0e\x32\x12.WellReferenceFlag\"3\n\nWellRefSet\x12%\n\treference\x18\x01 \x01(\x0e\x32\x12.WellReferenceFlag\"@\n\x07WellRef\x12\x0e\n\x06wellNr\x18\x01 \x01(\x05\x12%\n\treference\x18\x02 \x01(\x0e\x32\x12.WellReferenceFlag\"%\n\x15PixelConfigurationNew\x12\x0c\n\x04name\x18\x01 \x01(\t\",\n\tPixelMode\x12\x0f\n\x07pixelNr\x18\x01 \x01(\x05\x12\x0e\n\x06modeId\x18\x02 \x01(\x05\"/\n\rPixelModeWell\x12\x0e\n\x06wellNr\x18\x01 \x01(\x05\x12\x0e\n\x06modeId\x18\x02 \x01(\x05\"=\n\x0cPixelModeRow\x12\x0e\n\x06wellNr\x18\x01 \x01(\x05\x12\r\n\x05rowNr\x18\x02 \x01(\x05\x12\x0e\n\x06modeId\x18\x03 \x01(\x05\"C\n\x0fPixelModeColumn\x12\x0e\n\x06wellNr\x18\x01 \x01(\x05\x12\x10\n\x08\x63olumnNr\x18\x02 \x01(\x05\x12\x0e\n\x06modeId\x18\x03 \x01(\x05\"H\n\x0ePixelModeRange\x12\x13\n\x0bpixelNrFrom\x18\x01 \x01(\x05\x12\x11\n\tpixelNrTo\x18\x02 \x01(\x05\x12\x0e\n\x06modeId\x18\x03 \x01(\x05\"\x83\x01\n\x13StimulationSequence\x12\x12\n\npulseCount\x18\x01 \x01(\x05\x12 \n\x08polarity\x18\x02 \x01(\x0e\x32\x0e.PulsePolarity\x12\x1a\n\x12voltageStimulation\x18\x03 \x01(\x08\x12\x1a\n\x12\x63urrentStimulation\x18\x04 \x01(\x08\"_\n\x13ImpedanceMonitoring\x12#\n\tfrequency\x18\x01 \x01(\x0e\x32\x10.ImpMonFrequency\x12#\n\tamplitude\x18\x02 \x01(\x0e\x32\x10.ImpMonAmplitude\"\x1f\n\x0f\x42\x61tchProgramNew\x12\x0c\n\x04name\x18\x01 \x01(\t\"M\n\x10\x42\x61tchSweepCfgMap\x12\x13\n\x0blstCfgMapId\x18\x01 \x03(\x05\x12\x12\n\nsweepmuxes\x18\x02 \x01(\x08\x12\x10\n\x08parentId\x18\x03 \x01(\x05\"9\n\x10\x42\x61tchSweepMuxMap\x12\x13\n\x0blstMuxMapId\x18\x01 \x03(\x05\x12\x10\n\x08parentId\x18\x02 \x01(\x05\"9\n\x10\x42\x61tchSweepRefMap\x12\x13\n\x0blstRefMapId\x18\x01 \x03(\x05\x12\x10\n\x08parentId\x18\x02 \x01(\x05\"p\n\x17\x42\x61tchSweepVStimSettings\x12\x0f\n\x07idVStim\x18\x01 \x01(\x05\x12\x32\n\x15lstVStimConfiguration\x18\x02 \x03(\x0b\x32\x13.VStimConfiguration\x12\x10\n\x08parentId\x18\x03 \x01(\x05\"p\n\x17\x42\x61tchSweepIStimSettings\x12\x0f\n\x07idIStim\x18\x01 \x01(\x05\x12\x32\n\x15lstIStimConfiguration\x18\x02 \x03(\x0b\x32\x13.IStimConfiguration\x12\x10\n\x08parentId\x18\x03 \x01(\x05\"h\n\x15\x42\x61tchSweepRecSettings\x12\r\n\x05idRec\x18\x01 \x01(\x05\x12.\n\x13lstRecConfiguration\x18\x02 \x03(\x0b\x32\x11.RecConfiguration\x12\x10\n\x08parentId\x18\x03 \x01(\x05\":\n\x13\x42\x61tchRepeatSettings\x12\x11\n\tnrRepeats\x18\x01 \x01(\x05\x12\x10\n\x08parentId\x18\x02 \x01(\x05\"$\n\x10TimeLineSettings\x12\x10\n\x08parentId\x18\x01 \x01(\x05\":\n\x15TimeLineDelaySettings\x12\x0f\n\x07\x64\x65layMs\x18\x01 \x01(\x05\x12\x10\n\x08parentId\x18\x02 \x01(\x05\"\x9a\x01\n TimeLineStimulationEventSettings\x12)\n\x0fstimulationMode\x18\x01 \x01(\x0e\x32\x10.StimulationMode\x12%\n\rpulsePolarity\x18\x02 \x01(\x0e\x32\x0e.PulsePolarity\x12\x12\n\npulseCount\x18\x03 \x01(\x05\x12\x10\n\x08parentId\x18\x04 \x01(\x05\"=\n\x16TimelineRepeatSettings\x12\x11\n\tnrRepeats\x18\x01 \x01(\x05\x12\x10\n\x08parentId\x18\x02 \x01(\x05\"~\n TimelineImpedanceMonitorSettings\x12#\n\tfrequency\x18\x01 \x01(\x0e\x32\x10.ImpMonFrequency\x12#\n\tamplitude\x18\x02 \x01(\x0e\x32\x10.ImpMonAmplitude\x12\x10\n\x08parentId\x18\x03 \x01(\x05\"S\n\x1fTimelineSliceDefinitionSettings\x12\x1e\n\nprocessors\x18\x01 \x03(\x0e\x32\n.Processor\x12\x10\n\x08parentId\x18\x02 \x01(\x05\"-\n\x1cRecordWaitTimesOnOffSettings\x12\r\n\x05onOff\x18\x01 \x01(\x08\"L\n\tErrorInfo\x12\x14\n\x0c\x66unctionName\x18\x01 \x01(\t\x12\x0f\n\x07\x65rrorNr\x18\x02 \x01(\x05\x12\x18\n\x10\x65rrorDescription\x18\x03 \x01(\t\"#\n\x10\x45rrorInfoRequest\x12\x0f\n\x07nrOfMsg\x18\x01 \x01(\x05\".\n\rErrorInfoData\x12\x1d\n\terrorInfo\x18\x01 \x03(\x0b\x32\n.ErrorInfo*o\n\x11\x45lectrodePosition\x12\x06\n\x02\x45\x31\x10\x00\x12\x06\n\x02\x45\x32\x10\x01\x12\x06\n\x02\x45\x33\x10\x02\x12\x06\n\x02\x45\x34\x10\x03\x12\x0b\n\x07TopLeft\x10\x04\x12\x0c\n\x08TopRight\x10\x05\x12\x0e\n\nBottomLeft\x10\x06\x12\x0f\n\x0b\x42ottomRight\x10\x07*?\n\rPulsePolarity\x12\x16\n\x12PositivePulseFirst\x10\x00\x12\x16\n\x12NegativePulseFirst\x10\x01*N\n\x0bIStepValues\x12\r\n\tIStep_2pA\x10\x00\x12\r\n\tIStep_6pA\x10\x01\x12\x0f\n\x0bIStep_500pA\x10\x02\x12\x10\n\x0cIStep_1500pA\x10\x03*h\n\x07RecGain\x12\t\n\x05Gain1\x10\x00\x12\x0b\n\x07Gain2_5\x10\x01\x12\t\n\x05Gain5\x10\x02\x12\n\n\x06Gain10\x10\x03\x12\n\n\x06Gain20\x10\x04\x12\n\n\x06Gain30\x10\x05\x12\n\n\x06Gain40\x10\x06\x12\n\n\x06Gain60\x10\x07*\x92\x02\n\x0bImpSpecFreq\x12\r\n\tFreq_9Hz6\x10\x00\x12\x0e\n\nFreq_19Hz2\x10\x01\x12\r\n\tFreq_48Hz\x10\x02\x12\r\n\tFreq_96Hz\x10\x03\x12\x0e\n\nFreq_192Hz\x10\x04\x12\x0e\n\nFreq_480Hz\x10\x05\x12\x0e\n\nFreq_960Hz\x10\x06\x12\x0f\n\x0b\x46req_1920Hz\x10\x07\x12\x0f\n\x0b\x46req_4800Hz\x10\x08\x12\x0f\n\x0b\x46req_9600Hz\x10\t\x12\x10\n\x0c\x46req_19200Hz\x10\n\x12\x0e\n\nFreq_48kHz\x10\x0b\x12\x0e\n\nFreq_96kHz\x10\x0c\x12\x0f\n\x0b\x46req_192kHz\x10\r\x12\x0f\n\x0b\x46req_480kHz\x10\x0e\x12\x0f\n\x0b\x46req_960kHz\x10\x0f*\xb7\x01\n\x11WellReferenceFlag\x12\x08\n\x04None\x10\x00\x12\x0c\n\x08\x45xternal\x10\x01\x12\r\n\tInternal0\x10\x02\x12\r\n\tInternal1\x10\x04\x12\r\n\tInternal2\x10\x08\x12\r\n\tInternal3\x10\x10\x12\r\n\tInternal4\x10 \x12\r\n\tInternal5\x10@\x12\x0e\n\tInternal6\x10\x80\x01\x12\x0e\n\tInternal7\x10\x80\x02\x12\x10\n\x0b\x41llInternal\x10\xfe\x03*8\n\x0fImpMonFrequency\x12\x11\n\rFrequency1kHz\x10\x00\x12\x12\n\x0e\x46requency10kHz\x10\x01*6\n\x0fImpMonAmplitude\x12\x10\n\x0c\x41mplitude1nA\x10\x00\x12\x11\n\rAmplitude10nA\x10\x01*B\n\x0fStimulationMode\x12\x0b\n\x07Voltage\x10\x00\x12\x0b\n\x07\x43urrent\x10\x01\x12\x15\n\x11VoltageAndCurrent\x10\x02*D\n\tProcessor\x12\n\n\x06StdDev\x10\x00\x12\x07\n\x03\x41vg\x10\x01\x12\x0e\n\nPeakToPeak\x10\x02\x12\x08\n\x04ZMon\x10\x03\x12\x08\n\x04VRms\x10\x04\x32\x91\x18\n\nRpcService\x12.\n\rGetAppVersion\x12\r.EmptyMessage\x1a\x0c.StringReply\"\x00\x12.\n\rGetRpcVersion\x12\r.EmptyMessage\x1a\x0c.StringReply\"\x00\x12#\n\x07ScanUSb\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12\x35\n\x19GetDeviceConnectionStatus\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12&\n\nEnableAsic\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12\'\n\x0b\x44isableAsic\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12%\n\tResetAsic\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12!\n\x0bWriteChipID\x12\x07.ChipID\x1a\x07.Status\"\x00\x12+\n\nReadChipID\x12\r.EmptyMessage\x1a\x0c.StringReply\"\x00\x12*\n\x16LoadADCCalibrationFile\x12\x05.File\x1a\x07.Status\"\x00\x12\x31\n\x15\x44isableADCCalibration\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12%\n\x15LoadConfigurationFile\x12\x05.File\x1a\x03.Id\"\x00\x12\x34\n\x18\x43reateEmptyConfiguration\x12\x11.ConfigurationNew\x1a\x03.Id\"\x00\x12$\n\x12\x43learConfiguration\x12\x03.Id\x1a\x07.Status\"\x00\x12\x34\n\x12\x43loseConfiguration\x12\x13.ConfigurationClose\x1a\x07.Status\"\x00\x12(\n\x16SetConfigurationActive\x12\x03.Id\x1a\x07.Status\"\x00\x12!\n\x0c\x43reateMuxMap\x12\n.MuxMapNew\x1a\x03.Id\"\x00\x12!\n\x0fSetMuxMapActive\x12\x03.Id\x1a\x07.Status\"\x00\x12\x1f\n\tSetMuxMap\x12\x07.MuxMap\x1a\x07.Status\"\x00\x12\'\n\rSetMuxMapWell\x12\x0b.MuxMapWell\x1a\x07.Status\"\x00\x12)\n\x0eSetMuxMapPixel\x12\x0c.MuxMapPixel\x1a\x07.Status\"\x00\x12.\n\x15\x43reateRefElectrodeMap\x12\x0e.WellRefSetNew\x1a\x03.Id\"\x00\x12*\n\x18SetRefElectrodeMapActive\x12\x03.Id\x1a\x07.Status\"\x00\x12,\n\x12SetRefElectrodeMap\x12\x0b.WellRefSet\x1a\x07.Status\"\x00\x12*\n\x13SetRefElectrodeWell\x12\x08.WellRef\x1a\x07.Status\"\x00\x12-\n\x0f\x43reateVStimMode\x12\x13.VStimConfiguration\x1a\x03.Id\"\x00\x12-\n\x0f\x43reateIStimMode\x12\x13.IStimConfiguration\x1a\x03.Id\"\x00\x12)\n\rCreateRecMode\x12\x11.RecConfiguration\x1a\x03.Id\"\x00\x12\x31\n\x11\x43reateImpSpecMode\x12\x15.ImpSpecConfiguration\x1a\x03.Id\"\x00\x12\x39\n\x18\x43reatePixelConfiguration\x12\x16.PixelConfigurationNew\x1a\x03.Id\"\x00\x12-\n\x1bSetPixelConfigurationActive\x12\x03.Id\x1a\x07.Status\"\x00\x12%\n\x0cSetPixelMode\x12\n.PixelMode\x1a\x07.Status\"\x00\x12-\n\x10SetPixelModeWell\x12\x0e.PixelModeWell\x1a\x07.Status\"\x00\x12+\n\x0fSetPixelModeRow\x12\r.PixelModeRow\x1a\x07.Status\"\x00\x12\x31\n\x12SetPixelModeColumn\x12\x10.PixelModeColumn\x1a\x07.Status\"\x00\x12/\n\x11SetPixelModeRange\x12\x0f.PixelModeRange\x1a\x07.Status\"\x00\x12*\n\x0eUploadSettings\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12,\n\x10StartAcquisition\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12)\n\rStartBatchRun\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12+\n\x0f\x45xecuteBatchRun\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12+\n\x0fStopAcquisition\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12\x38\n\x1c\x45xecuteImpedanceSpectroscopy\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12)\n\x15\x45xportMeasurementData\x12\x05.File\x1a\x07.Status\"\x00\x12;\n\x18StartStimulationSequence\x12\x14.StimulationSequence\x1a\x07.Status\"\x00\x12;\n\x18StartImpedanceMonitoring\x12\x14.ImpedanceMonitoring\x1a\x07.Status\"\x00\x12\x33\n\x17StopImpedanceMonitoring\x12\r.EmptyMessage\x1a\x07.Status\"\x00\x12-\n\x12\x43reateBatchProgram\x12\x10.BatchProgramNew\x1a\x03.Id\"\x00\x12\'\n\x15SetBatchProgramActive\x12\x03.Id\x1a\x07.Status\"\x00\x12\x32\n\x16\x43reateBatchSweepCfgMap\x12\x11.BatchSweepCfgMap\x1a\x03.Id\"\x00\x12\x32\n\x16\x43reateBatchSweepMuxMap\x12\x11.BatchSweepMuxMap\x1a\x03.Id\"\x00\x12\x32\n\x16\x43reateBatchSweepRefMap\x12\x11.BatchSweepRefMap\x1a\x03.Id\"\x00\x12\x38\n\x15\x43reateBatchSweepVStim\x12\x18.BatchSweepVStimSettings\x1a\x03.Id\"\x00\x12\x38\n\x15\x43reateBatchSweepIStim\x12\x18.BatchSweepIStimSettings\x1a\x03.Id\"\x00\x12\x34\n\x13\x43reateBatchSweepRec\x12\x16.BatchSweepRecSettings\x1a\x03.Id\"\x00\x12\x30\n\x11\x43reateBatchRepeat\x12\x14.BatchRepeatSettings\x1a\x03.Id\"\x00\x12*\n\x0e\x43reateTimeLine\x12\x11.TimeLineSettings\x1a\x03.Id\"\x00\x12\x38\n\x13\x43reateTimeLineDelay\x12\x16.TimeLineDelaySettings\x1a\x07.Status\"\x00\x12N\n\x1e\x43reateTimeLineStimulationEvent\x12!.TimeLineStimulationEventSettings\x1a\x07.Status\"\x00\x12\x36\n\x14\x43reateTimelineRepeat\x12\x17.TimelineRepeatSettings\x1a\x03.Id\"\x00\x12J\n\x1e\x43reateTimelineImpedanceMonitor\x12!.TimelineImpedanceMonitorSettings\x1a\x03.Id\"\x00\x12H\n\x1d\x43reateTimelineSliceDefinition\x12 .TimelineSliceDefinitionSettings\x1a\x03.Id\"\x00\x12\x43\n\x17SetRecordWaitTimesOnOff\x12\x1d.RecordWaitTimesOnOffSettings\x1a\x07.Status\"\x00\x12\x33\n\x0cGetErrorInfo\x12\x11.ErrorInfoRequest\x1a\x0e.ErrorInfoData\"\x00\x42\x14\xaa\x02\x11SparrowRpcServiceb\x06proto3')

_ELECTRODEPOSITION = DESCRIPTOR.enum_types_by_name['ElectrodePosition']
ElectrodePosition = enum_type_wrapper.EnumTypeWrapper(_ELECTRODEPOSITION)
_PULSEPOLARITY = DESCRIPTOR.enum_types_by_name['PulsePolarity']
PulsePolarity = enum_type_wrapper.EnumTypeWrapper(_PULSEPOLARITY)
_ISTEPVALUES = DESCRIPTOR.enum_types_by_name['IStepValues']
IStepValues = enum_type_wrapper.EnumTypeWrapper(_ISTEPVALUES)
_RECGAIN = DESCRIPTOR.enum_types_by_name['RecGain']
RecGain = enum_type_wrapper.EnumTypeWrapper(_RECGAIN)
_IMPSPECFREQ = DESCRIPTOR.enum_types_by_name['ImpSpecFreq']
ImpSpecFreq = enum_type_wrapper.EnumTypeWrapper(_IMPSPECFREQ)
_WELLREFERENCEFLAG = DESCRIPTOR.enum_types_by_name['WellReferenceFlag']
WellReferenceFlag = enum_type_wrapper.EnumTypeWrapper(_WELLREFERENCEFLAG)
_IMPMONFREQUENCY = DESCRIPTOR.enum_types_by_name['ImpMonFrequency']
ImpMonFrequency = enum_type_wrapper.EnumTypeWrapper(_IMPMONFREQUENCY)
_IMPMONAMPLITUDE = DESCRIPTOR.enum_types_by_name['ImpMonAmplitude']
ImpMonAmplitude = enum_type_wrapper.EnumTypeWrapper(_IMPMONAMPLITUDE)
_STIMULATIONMODE = DESCRIPTOR.enum_types_by_name['StimulationMode']
StimulationMode = enum_type_wrapper.EnumTypeWrapper(_STIMULATIONMODE)
_PROCESSOR = DESCRIPTOR.enum_types_by_name['Processor']
Processor = enum_type_wrapper.EnumTypeWrapper(_PROCESSOR)
E1 = 0
E2 = 1
E3 = 2
E4 = 3
TopLeft = 4
TopRight = 5
BottomLeft = 6
BottomRight = 7
PositivePulseFirst = 0
NegativePulseFirst = 1
IStep_2pA = 0
IStep_6pA = 1
IStep_500pA = 2
IStep_1500pA = 3
Gain1 = 0
Gain2_5 = 1
Gain5 = 2
Gain10 = 3
Gain20 = 4
Gain30 = 5
Gain40 = 6
Gain60 = 7
Freq_9Hz6 = 0
Freq_19Hz2 = 1
Freq_48Hz = 2
Freq_96Hz = 3
Freq_192Hz = 4
Freq_480Hz = 5
Freq_960Hz = 6
Freq_1920Hz = 7
Freq_4800Hz = 8
Freq_9600Hz = 9
Freq_19200Hz = 10
Freq_48kHz = 11
Freq_96kHz = 12
Freq_192kHz = 13
Freq_480kHz = 14
Freq_960kHz = 15
globals()['None'] = 0
External = 1
Internal0 = 2
Internal1 = 4
Internal2 = 8
Internal3 = 16
Internal4 = 32
Internal5 = 64
Internal6 = 128
Internal7 = 256
AllInternal = 510
Frequency1kHz = 0
Frequency10kHz = 1
Amplitude1nA = 0
Amplitude10nA = 1
Voltage = 0
Current = 1
VoltageAndCurrent = 2
StdDev = 0
Avg = 1
PeakToPeak = 2
ZMon = 3
VRms = 4


_FILE = DESCRIPTOR.message_types_by_name['File']
_CHIPID = DESCRIPTOR.message_types_by_name['ChipID']
_STATUS = DESCRIPTOR.message_types_by_name['Status']
_STRINGREPLY = DESCRIPTOR.message_types_by_name['StringReply']
_ID = DESCRIPTOR.message_types_by_name['Id']
_EMPTYMESSAGE = DESCRIPTOR.message_types_by_name['EmptyMessage']
_CONFIGURATIONNEW = DESCRIPTOR.message_types_by_name['ConfigurationNew']
_CONFIGURATIONCLOSE = DESCRIPTOR.message_types_by_name['ConfigurationClose']
_MUXMAPNEW = DESCRIPTOR.message_types_by_name['MuxMapNew']
_MUXMAP = DESCRIPTOR.message_types_by_name['MuxMap']
_MUXMAPWELL = DESCRIPTOR.message_types_by_name['MuxMapWell']
_MUXMAPPIXEL = DESCRIPTOR.message_types_by_name['MuxMapPixel']
_VSTIMCONFIGURATION = DESCRIPTOR.message_types_by_name['VStimConfiguration']
_ISTIMCONFIGURATION = DESCRIPTOR.message_types_by_name['IStimConfiguration']
_RECCONFIGURATION = DESCRIPTOR.message_types_by_name['RecConfiguration']
_IMPSPECFREQCONFIGURATION = DESCRIPTOR.message_types_by_name['ImpSpecFreqConfiguration']
_IMPSPECCONFIGURATION = DESCRIPTOR.message_types_by_name['ImpSpecConfiguration']
_WELLREFSETNEW = DESCRIPTOR.message_types_by_name['WellRefSetNew']
_WELLREFSET = DESCRIPTOR.message_types_by_name['WellRefSet']
_WELLREF = DESCRIPTOR.message_types_by_name['WellRef']
_PIXELCONFIGURATIONNEW = DESCRIPTOR.message_types_by_name['PixelConfigurationNew']
_PIXELMODE = DESCRIPTOR.message_types_by_name['PixelMode']
_PIXELMODEWELL = DESCRIPTOR.message_types_by_name['PixelModeWell']
_PIXELMODEROW = DESCRIPTOR.message_types_by_name['PixelModeRow']
_PIXELMODECOLUMN = DESCRIPTOR.message_types_by_name['PixelModeColumn']
_PIXELMODERANGE = DESCRIPTOR.message_types_by_name['PixelModeRange']
_STIMULATIONSEQUENCE = DESCRIPTOR.message_types_by_name['StimulationSequence']
_IMPEDANCEMONITORING = DESCRIPTOR.message_types_by_name['ImpedanceMonitoring']
_BATCHPROGRAMNEW = DESCRIPTOR.message_types_by_name['BatchProgramNew']
_BATCHSWEEPCFGMAP = DESCRIPTOR.message_types_by_name['BatchSweepCfgMap']
_BATCHSWEEPMUXMAP = DESCRIPTOR.message_types_by_name['BatchSweepMuxMap']
_BATCHSWEEPREFMAP = DESCRIPTOR.message_types_by_name['BatchSweepRefMap']
_BATCHSWEEPVSTIMSETTINGS = DESCRIPTOR.message_types_by_name['BatchSweepVStimSettings']
_BATCHSWEEPISTIMSETTINGS = DESCRIPTOR.message_types_by_name['BatchSweepIStimSettings']
_BATCHSWEEPRECSETTINGS = DESCRIPTOR.message_types_by_name['BatchSweepRecSettings']
_BATCHREPEATSETTINGS = DESCRIPTOR.message_types_by_name['BatchRepeatSettings']
_TIMELINESETTINGS = DESCRIPTOR.message_types_by_name['TimeLineSettings']
_TIMELINEDELAYSETTINGS = DESCRIPTOR.message_types_by_name['TimeLineDelaySettings']
_TIMELINESTIMULATIONEVENTSETTINGS = DESCRIPTOR.message_types_by_name['TimeLineStimulationEventSettings']
_TIMELINEREPEATSETTINGS = DESCRIPTOR.message_types_by_name['TimelineRepeatSettings']
_TIMELINEIMPEDANCEMONITORSETTINGS = DESCRIPTOR.message_types_by_name['TimelineImpedanceMonitorSettings']
_TIMELINESLICEDEFINITIONSETTINGS = DESCRIPTOR.message_types_by_name['TimelineSliceDefinitionSettings']
_RECORDWAITTIMESONOFFSETTINGS = DESCRIPTOR.message_types_by_name['RecordWaitTimesOnOffSettings']
_ERRORINFO = DESCRIPTOR.message_types_by_name['ErrorInfo']
_ERRORINFOREQUEST = DESCRIPTOR.message_types_by_name['ErrorInfoRequest']
_ERRORINFODATA = DESCRIPTOR.message_types_by_name['ErrorInfoData']
File = _reflection.GeneratedProtocolMessageType('File', (_message.Message,), {
  'DESCRIPTOR' : _FILE,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:File)
  })
_sym_db.RegisterMessage(File)

ChipID = _reflection.GeneratedProtocolMessageType('ChipID', (_message.Message,), {
  'DESCRIPTOR' : _CHIPID,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:ChipID)
  })
_sym_db.RegisterMessage(ChipID)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), {
  'DESCRIPTOR' : _STATUS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:Status)
  })
_sym_db.RegisterMessage(Status)

StringReply = _reflection.GeneratedProtocolMessageType('StringReply', (_message.Message,), {
  'DESCRIPTOR' : _STRINGREPLY,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:StringReply)
  })
_sym_db.RegisterMessage(StringReply)

Id = _reflection.GeneratedProtocolMessageType('Id', (_message.Message,), {
  'DESCRIPTOR' : _ID,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:Id)
  })
_sym_db.RegisterMessage(Id)

EmptyMessage = _reflection.GeneratedProtocolMessageType('EmptyMessage', (_message.Message,), {
  'DESCRIPTOR' : _EMPTYMESSAGE,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:EmptyMessage)
  })
_sym_db.RegisterMessage(EmptyMessage)

ConfigurationNew = _reflection.GeneratedProtocolMessageType('ConfigurationNew', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGURATIONNEW,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:ConfigurationNew)
  })
_sym_db.RegisterMessage(ConfigurationNew)

ConfigurationClose = _reflection.GeneratedProtocolMessageType('ConfigurationClose', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGURATIONCLOSE,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:ConfigurationClose)
  })
_sym_db.RegisterMessage(ConfigurationClose)

MuxMapNew = _reflection.GeneratedProtocolMessageType('MuxMapNew', (_message.Message,), {
  'DESCRIPTOR' : _MUXMAPNEW,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:MuxMapNew)
  })
_sym_db.RegisterMessage(MuxMapNew)

MuxMap = _reflection.GeneratedProtocolMessageType('MuxMap', (_message.Message,), {
  'DESCRIPTOR' : _MUXMAP,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:MuxMap)
  })
_sym_db.RegisterMessage(MuxMap)

MuxMapWell = _reflection.GeneratedProtocolMessageType('MuxMapWell', (_message.Message,), {
  'DESCRIPTOR' : _MUXMAPWELL,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:MuxMapWell)
  })
_sym_db.RegisterMessage(MuxMapWell)

MuxMapPixel = _reflection.GeneratedProtocolMessageType('MuxMapPixel', (_message.Message,), {
  'DESCRIPTOR' : _MUXMAPPIXEL,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:MuxMapPixel)
  })
_sym_db.RegisterMessage(MuxMapPixel)

VStimConfiguration = _reflection.GeneratedProtocolMessageType('VStimConfiguration', (_message.Message,), {
  'DESCRIPTOR' : _VSTIMCONFIGURATION,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:VStimConfiguration)
  })
_sym_db.RegisterMessage(VStimConfiguration)

IStimConfiguration = _reflection.GeneratedProtocolMessageType('IStimConfiguration', (_message.Message,), {
  'DESCRIPTOR' : _ISTIMCONFIGURATION,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:IStimConfiguration)
  })
_sym_db.RegisterMessage(IStimConfiguration)

RecConfiguration = _reflection.GeneratedProtocolMessageType('RecConfiguration', (_message.Message,), {
  'DESCRIPTOR' : _RECCONFIGURATION,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:RecConfiguration)
  })
_sym_db.RegisterMessage(RecConfiguration)

ImpSpecFreqConfiguration = _reflection.GeneratedProtocolMessageType('ImpSpecFreqConfiguration', (_message.Message,), {
  'DESCRIPTOR' : _IMPSPECFREQCONFIGURATION,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:ImpSpecFreqConfiguration)
  })
_sym_db.RegisterMessage(ImpSpecFreqConfiguration)

ImpSpecConfiguration = _reflection.GeneratedProtocolMessageType('ImpSpecConfiguration', (_message.Message,), {
  'DESCRIPTOR' : _IMPSPECCONFIGURATION,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:ImpSpecConfiguration)
  })
_sym_db.RegisterMessage(ImpSpecConfiguration)

WellRefSetNew = _reflection.GeneratedProtocolMessageType('WellRefSetNew', (_message.Message,), {
  'DESCRIPTOR' : _WELLREFSETNEW,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:WellRefSetNew)
  })
_sym_db.RegisterMessage(WellRefSetNew)

WellRefSet = _reflection.GeneratedProtocolMessageType('WellRefSet', (_message.Message,), {
  'DESCRIPTOR' : _WELLREFSET,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:WellRefSet)
  })
_sym_db.RegisterMessage(WellRefSet)

WellRef = _reflection.GeneratedProtocolMessageType('WellRef', (_message.Message,), {
  'DESCRIPTOR' : _WELLREF,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:WellRef)
  })
_sym_db.RegisterMessage(WellRef)

PixelConfigurationNew = _reflection.GeneratedProtocolMessageType('PixelConfigurationNew', (_message.Message,), {
  'DESCRIPTOR' : _PIXELCONFIGURATIONNEW,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:PixelConfigurationNew)
  })
_sym_db.RegisterMessage(PixelConfigurationNew)

PixelMode = _reflection.GeneratedProtocolMessageType('PixelMode', (_message.Message,), {
  'DESCRIPTOR' : _PIXELMODE,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:PixelMode)
  })
_sym_db.RegisterMessage(PixelMode)

PixelModeWell = _reflection.GeneratedProtocolMessageType('PixelModeWell', (_message.Message,), {
  'DESCRIPTOR' : _PIXELMODEWELL,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:PixelModeWell)
  })
_sym_db.RegisterMessage(PixelModeWell)

PixelModeRow = _reflection.GeneratedProtocolMessageType('PixelModeRow', (_message.Message,), {
  'DESCRIPTOR' : _PIXELMODEROW,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:PixelModeRow)
  })
_sym_db.RegisterMessage(PixelModeRow)

PixelModeColumn = _reflection.GeneratedProtocolMessageType('PixelModeColumn', (_message.Message,), {
  'DESCRIPTOR' : _PIXELMODECOLUMN,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:PixelModeColumn)
  })
_sym_db.RegisterMessage(PixelModeColumn)

PixelModeRange = _reflection.GeneratedProtocolMessageType('PixelModeRange', (_message.Message,), {
  'DESCRIPTOR' : _PIXELMODERANGE,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:PixelModeRange)
  })
_sym_db.RegisterMessage(PixelModeRange)

StimulationSequence = _reflection.GeneratedProtocolMessageType('StimulationSequence', (_message.Message,), {
  'DESCRIPTOR' : _STIMULATIONSEQUENCE,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:StimulationSequence)
  })
_sym_db.RegisterMessage(StimulationSequence)

ImpedanceMonitoring = _reflection.GeneratedProtocolMessageType('ImpedanceMonitoring', (_message.Message,), {
  'DESCRIPTOR' : _IMPEDANCEMONITORING,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:ImpedanceMonitoring)
  })
_sym_db.RegisterMessage(ImpedanceMonitoring)

BatchProgramNew = _reflection.GeneratedProtocolMessageType('BatchProgramNew', (_message.Message,), {
  'DESCRIPTOR' : _BATCHPROGRAMNEW,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:BatchProgramNew)
  })
_sym_db.RegisterMessage(BatchProgramNew)

BatchSweepCfgMap = _reflection.GeneratedProtocolMessageType('BatchSweepCfgMap', (_message.Message,), {
  'DESCRIPTOR' : _BATCHSWEEPCFGMAP,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:BatchSweepCfgMap)
  })
_sym_db.RegisterMessage(BatchSweepCfgMap)

BatchSweepMuxMap = _reflection.GeneratedProtocolMessageType('BatchSweepMuxMap', (_message.Message,), {
  'DESCRIPTOR' : _BATCHSWEEPMUXMAP,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:BatchSweepMuxMap)
  })
_sym_db.RegisterMessage(BatchSweepMuxMap)

BatchSweepRefMap = _reflection.GeneratedProtocolMessageType('BatchSweepRefMap', (_message.Message,), {
  'DESCRIPTOR' : _BATCHSWEEPREFMAP,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:BatchSweepRefMap)
  })
_sym_db.RegisterMessage(BatchSweepRefMap)

BatchSweepVStimSettings = _reflection.GeneratedProtocolMessageType('BatchSweepVStimSettings', (_message.Message,), {
  'DESCRIPTOR' : _BATCHSWEEPVSTIMSETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:BatchSweepVStimSettings)
  })
_sym_db.RegisterMessage(BatchSweepVStimSettings)

BatchSweepIStimSettings = _reflection.GeneratedProtocolMessageType('BatchSweepIStimSettings', (_message.Message,), {
  'DESCRIPTOR' : _BATCHSWEEPISTIMSETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:BatchSweepIStimSettings)
  })
_sym_db.RegisterMessage(BatchSweepIStimSettings)

BatchSweepRecSettings = _reflection.GeneratedProtocolMessageType('BatchSweepRecSettings', (_message.Message,), {
  'DESCRIPTOR' : _BATCHSWEEPRECSETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:BatchSweepRecSettings)
  })
_sym_db.RegisterMessage(BatchSweepRecSettings)

BatchRepeatSettings = _reflection.GeneratedProtocolMessageType('BatchRepeatSettings', (_message.Message,), {
  'DESCRIPTOR' : _BATCHREPEATSETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:BatchRepeatSettings)
  })
_sym_db.RegisterMessage(BatchRepeatSettings)

TimeLineSettings = _reflection.GeneratedProtocolMessageType('TimeLineSettings', (_message.Message,), {
  'DESCRIPTOR' : _TIMELINESETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:TimeLineSettings)
  })
_sym_db.RegisterMessage(TimeLineSettings)

TimeLineDelaySettings = _reflection.GeneratedProtocolMessageType('TimeLineDelaySettings', (_message.Message,), {
  'DESCRIPTOR' : _TIMELINEDELAYSETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:TimeLineDelaySettings)
  })
_sym_db.RegisterMessage(TimeLineDelaySettings)

TimeLineStimulationEventSettings = _reflection.GeneratedProtocolMessageType('TimeLineStimulationEventSettings', (_message.Message,), {
  'DESCRIPTOR' : _TIMELINESTIMULATIONEVENTSETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:TimeLineStimulationEventSettings)
  })
_sym_db.RegisterMessage(TimeLineStimulationEventSettings)

TimelineRepeatSettings = _reflection.GeneratedProtocolMessageType('TimelineRepeatSettings', (_message.Message,), {
  'DESCRIPTOR' : _TIMELINEREPEATSETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:TimelineRepeatSettings)
  })
_sym_db.RegisterMessage(TimelineRepeatSettings)

TimelineImpedanceMonitorSettings = _reflection.GeneratedProtocolMessageType('TimelineImpedanceMonitorSettings', (_message.Message,), {
  'DESCRIPTOR' : _TIMELINEIMPEDANCEMONITORSETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:TimelineImpedanceMonitorSettings)
  })
_sym_db.RegisterMessage(TimelineImpedanceMonitorSettings)

TimelineSliceDefinitionSettings = _reflection.GeneratedProtocolMessageType('TimelineSliceDefinitionSettings', (_message.Message,), {
  'DESCRIPTOR' : _TIMELINESLICEDEFINITIONSETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:TimelineSliceDefinitionSettings)
  })
_sym_db.RegisterMessage(TimelineSliceDefinitionSettings)

RecordWaitTimesOnOffSettings = _reflection.GeneratedProtocolMessageType('RecordWaitTimesOnOffSettings', (_message.Message,), {
  'DESCRIPTOR' : _RECORDWAITTIMESONOFFSETTINGS,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:RecordWaitTimesOnOffSettings)
  })
_sym_db.RegisterMessage(RecordWaitTimesOnOffSettings)

ErrorInfo = _reflection.GeneratedProtocolMessageType('ErrorInfo', (_message.Message,), {
  'DESCRIPTOR' : _ERRORINFO,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:ErrorInfo)
  })
_sym_db.RegisterMessage(ErrorInfo)

ErrorInfoRequest = _reflection.GeneratedProtocolMessageType('ErrorInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _ERRORINFOREQUEST,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:ErrorInfoRequest)
  })
_sym_db.RegisterMessage(ErrorInfoRequest)

ErrorInfoData = _reflection.GeneratedProtocolMessageType('ErrorInfoData', (_message.Message,), {
  'DESCRIPTOR' : _ERRORINFODATA,
  '__module__' : 'contracts_pb2'
  # @@protoc_insertion_point(class_scope:ErrorInfoData)
  })
_sym_db.RegisterMessage(ErrorInfoData)

_RPCSERVICE = DESCRIPTOR.services_by_name['RpcService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\252\002\021SparrowRpcService'
  _ELECTRODEPOSITION._serialized_start=3332
  _ELECTRODEPOSITION._serialized_end=3443
  _PULSEPOLARITY._serialized_start=3445
  _PULSEPOLARITY._serialized_end=3508
  _ISTEPVALUES._serialized_start=3510
  _ISTEPVALUES._serialized_end=3588
  _RECGAIN._serialized_start=3590
  _RECGAIN._serialized_end=3694
  _IMPSPECFREQ._serialized_start=3697
  _IMPSPECFREQ._serialized_end=3971
  _WELLREFERENCEFLAG._serialized_start=3974
  _WELLREFERENCEFLAG._serialized_end=4157
  _IMPMONFREQUENCY._serialized_start=4159
  _IMPMONFREQUENCY._serialized_end=4215
  _IMPMONAMPLITUDE._serialized_start=4217
  _IMPMONAMPLITUDE._serialized_end=4271
  _STIMULATIONMODE._serialized_start=4273
  _STIMULATIONMODE._serialized_end=4339
  _PROCESSOR._serialized_start=4341
  _PROCESSOR._serialized_end=4409
  _FILE._serialized_start=19
  _FILE._serialized_end=43
  _CHIPID._serialized_start=45
  _CHIPID._serialized_end=69
  _STATUS._serialized_start=71
  _STATUS._serialized_end=94
  _STRINGREPLY._serialized_start=96
  _STRINGREPLY._serialized_end=124
  _ID._serialized_start=126
  _ID._serialized_end=145
  _EMPTYMESSAGE._serialized_start=147
  _EMPTYMESSAGE._serialized_end=161
  _CONFIGURATIONNEW._serialized_start=163
  _CONFIGURATIONNEW._serialized_end=195
  _CONFIGURATIONCLOSE._serialized_start=197
  _CONFIGURATIONCLOSE._serialized_end=243
  _MUXMAPNEW._serialized_start=245
  _MUXMAPNEW._serialized_end=312
  _MUXMAP._serialized_start=314
  _MUXMAP._serialized_end=364
  _MUXMAPWELL._serialized_start=366
  _MUXMAPWELL._serialized_end=436
  _MUXMAPPIXEL._serialized_start=438
  _MUXMAPPIXEL._serialized_end=510
  _VSTIMCONFIGURATION._serialized_start=513
  _VSTIMCONFIGURATION._serialized_end=679
  _ISTIMCONFIGURATION._serialized_start=682
  _ISTIMCONFIGURATION._serialized_end=888
  _RECCONFIGURATION._serialized_start=890
  _RECCONFIGURATION._serialized_end=975
  _IMPSPECFREQCONFIGURATION._serialized_start=977
  _IMPSPECFREQCONFIGURATION._serialized_end=1103
  _IMPSPECCONFIGURATION._serialized_start=1105
  _IMPSPECCONFIGURATION._serialized_end=1205
  _WELLREFSETNEW._serialized_start=1207
  _WELLREFSETNEW._serialized_end=1275
  _WELLREFSET._serialized_start=1277
  _WELLREFSET._serialized_end=1328
  _WELLREF._serialized_start=1330
  _WELLREF._serialized_end=1394
  _PIXELCONFIGURATIONNEW._serialized_start=1396
  _PIXELCONFIGURATIONNEW._serialized_end=1433
  _PIXELMODE._serialized_start=1435
  _PIXELMODE._serialized_end=1479
  _PIXELMODEWELL._serialized_start=1481
  _PIXELMODEWELL._serialized_end=1528
  _PIXELMODEROW._serialized_start=1530
  _PIXELMODEROW._serialized_end=1591
  _PIXELMODECOLUMN._serialized_start=1593
  _PIXELMODECOLUMN._serialized_end=1660
  _PIXELMODERANGE._serialized_start=1662
  _PIXELMODERANGE._serialized_end=1734
  _STIMULATIONSEQUENCE._serialized_start=1737
  _STIMULATIONSEQUENCE._serialized_end=1868
  _IMPEDANCEMONITORING._serialized_start=1870
  _IMPEDANCEMONITORING._serialized_end=1965
  _BATCHPROGRAMNEW._serialized_start=1967
  _BATCHPROGRAMNEW._serialized_end=1998
  _BATCHSWEEPCFGMAP._serialized_start=2000
  _BATCHSWEEPCFGMAP._serialized_end=2077
  _BATCHSWEEPMUXMAP._serialized_start=2079
  _BATCHSWEEPMUXMAP._serialized_end=2136
  _BATCHSWEEPREFMAP._serialized_start=2138
  _BATCHSWEEPREFMAP._serialized_end=2195
  _BATCHSWEEPVSTIMSETTINGS._serialized_start=2197
  _BATCHSWEEPVSTIMSETTINGS._serialized_end=2309
  _BATCHSWEEPISTIMSETTINGS._serialized_start=2311
  _BATCHSWEEPISTIMSETTINGS._serialized_end=2423
  _BATCHSWEEPRECSETTINGS._serialized_start=2425
  _BATCHSWEEPRECSETTINGS._serialized_end=2529
  _BATCHREPEATSETTINGS._serialized_start=2531
  _BATCHREPEATSETTINGS._serialized_end=2589
  _TIMELINESETTINGS._serialized_start=2591
  _TIMELINESETTINGS._serialized_end=2627
  _TIMELINEDELAYSETTINGS._serialized_start=2629
  _TIMELINEDELAYSETTINGS._serialized_end=2687
  _TIMELINESTIMULATIONEVENTSETTINGS._serialized_start=2690
  _TIMELINESTIMULATIONEVENTSETTINGS._serialized_end=2844
  _TIMELINEREPEATSETTINGS._serialized_start=2846
  _TIMELINEREPEATSETTINGS._serialized_end=2907
  _TIMELINEIMPEDANCEMONITORSETTINGS._serialized_start=2909
  _TIMELINEIMPEDANCEMONITORSETTINGS._serialized_end=3035
  _TIMELINESLICEDEFINITIONSETTINGS._serialized_start=3037
  _TIMELINESLICEDEFINITIONSETTINGS._serialized_end=3120
  _RECORDWAITTIMESONOFFSETTINGS._serialized_start=3122
  _RECORDWAITTIMESONOFFSETTINGS._serialized_end=3167
  _ERRORINFO._serialized_start=3169
  _ERRORINFO._serialized_end=3245
  _ERRORINFOREQUEST._serialized_start=3247
  _ERRORINFOREQUEST._serialized_end=3282
  _ERRORINFODATA._serialized_start=3284
  _ERRORINFODATA._serialized_end=3330
  _RPCSERVICE._serialized_start=4412
  _RPCSERVICE._serialized_end=7501
# @@protoc_insertion_point(module_scope)
